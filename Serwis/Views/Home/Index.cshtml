@using Microsoft.AspNetCore.Http;
@model List<Serwis.Models.ViewModels.ProductViewModel>
@inject IHttpContextAccessor HttpContextAccessor;
@{
    var sessionForLogin = HttpContextAccessor.HttpContext?.Session.GetString("Login");


}

<div class="bookItem">

    @if (Model != null || !Model.Any())
    {

        @foreach (var item in Model)
        {
            <div>
                <a style="cursor: pointer;" asp-action="Product" asp-controller="Shop" asp-route-productId="@item.Id">
                    <img src="~/images/@item.ImageFileName" />
                </a>
                <span>@item.Name</span>
                <span>@item.Price zł</span>
                <div style="display:block">
                    <a asp-action="BuySingleProduct" asp-controller="Shop" asp-route-productId="@item.Id"
               class=" mt-1 btn btn-sm btn-secondary"> Kupuj</a>
                    <button class=" mt-1 btn btn-sm btn-primary" style="display: inline"
                    onclick="AddPositionToCart('@item.Id', '@sessionForLogin')">
                        Dodaj do koszyka
                    </button>
                </div>
            </div>
        }

    }
    else
    {
        <h2>Brak pozycji do wyswietlenia</h2>
    }
</div>
@section scripts{
    <script type="text/javascript">


const confirmMsg = document.getElementById("confirm");
        function AddPositionToCart(productId, userName) {
            if (!confirm(" Czy na pewno chesz dodac te pozycje do koszyka?"))
                return;
            $.ajax({
                type: 'POST',
                url: "@Url.Action("AddPositionToCart", "Shop")",
                data:
                {
                    productId: productId,
                    userName: userName
                },
                success: function(data) {
                    if (data.success) { // musza byc male litery i tu i tu

                        // function closePrivacyPolicy()
                        //{

                        //  $.cookie("privacyPolicyCookie", "ciastko", { path: "/", expires: 365 });

                        // }
                        console.log(confirmMsg);

                        let quantity = document.getElementsByClassName('cart-quantity')[0].textContent
                        quantity++;

                        if (confirmMsg !== null ) {

                            var expires = "";
                           
                                var date = new Date();
                                date.setTime(date.getTime() + (1 * 24 * 60 * 60 * 1000));
                                
                                var data = date.toUTCString();

                            document.cookie = `cart = ${quantity}; expires = ${data}; path=/`;
                            let cookie_value = document.cookie.split(';');
                            let cookie_value_split = cookie_value[0].split('=')
                            let cart_quantity_cookie = cookie_value_split[1];

                            document.getElementsByClassName('cart-quantity')[0].textContent = cart_quantity_cookie
                            sessionStorage.removeItem('key');
                            
                        } else {
                            sessionStorage.setItem('key', quantity.toString());
                            let cart_quantity = sessionStorage.getItem('key');
                            document.getElementsByClassName('cart-quantity')[0].textContent = cart_quantity;
                            document.cookie = 'cart =; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                        }
                    } else {
                        alert(data.message);
                    }

                },

                error: function(data) {
                    alert(data.message);
                },
                dataType: 'json'

            });
        }
    </script>
}