@model Serwis.Models.ViewModels.ProductViewModel


<div class="container">

    <h2>@(Model.Id == 0 ? "Dodawanie nowego zamówienia" : "Aktualizowanie zamowienia")</h2>

    <span></span>
    <form method="post" asp-action="Upsert" asp-controller="Home" enctype="multipart/form-data">

        @if (Model.Id != 0)
        {
            <input type="hidden" asp-for="Id">
        }

        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        <div class="form-group row mt-3">
            <div class="col-3">
                <label asp-for="Name"></label>
            </div>
            <div class="col-6">
                <input class="form-control" asp-for="Name">
            </div>
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>

        <div class="form-group row mt-3">
            <div class="col-3">
                <label asp-for="ImageFile"></label>
            </div>
            <div class="col-6">
                <input id="imageFile" class="form-control" accept="image/*" asp-for="ImageFile">
                @if (@Model.ImageFileName == null)
                {
                    <div id="preview" class="mt-3">
                        <p>Nie wybrano żadnego zdjecia</p>
                    </div>
                }
            </div>

            <span class="text-danger" asp-validation-for="ImageFile"></span>
        </div>
        <div class="form-group row mt-3">
            <div class="col-3">
                <label asp-for="Description"></label>
            </div>
            <div class="col-6">
                <input class="form-control" asp-for="Description">
            </div>
            <span class="text-danger" asp-validation-for="Description"></span>
        </div>
        <div class="form-group row mt-3">
            <div class="col-3">
                <label asp-for="Price"></label>
            </div>
            <div class="col-6">
                <input class="form-control" asp-for="Price">
            </div>
            <span class="text-danger" asp-validation-for="Price"></span>
        </div>

        @if (@Model.ImageFileName != null)
        {
            <img src="~/images/@Model.ImageFileName" />
        }



        <div class="form-group row mt-3">
            <div class="col-6">
                <input type="submit" class=" btn btn-primary form-control" value="Zatwierdź" />
            </div>
            <div class="col-6">
                <a type="button" class="btn btn-secondary form-control" asp-action="Service">Powrót</a>
            </div>
        </div>
    </form>
</div>
@section scripts{
<script type="text/javascript">
    const input = document.getElementById('imageFile');
    const preview = document.getElementById('preview');

    //input.style.opacity = 0;

    input.addEventListener('change', updateImageDisplay); // oczekiwanie na zmiane i wtedy wywołanie
    function updateImageDisplay()
    {
        while (preview.firstChild)
        {
            preview.removeChild(preview.firstChild); //oczyszczenie z poprzedniego widoku
        }

        const curFiles = input.files;
        if (curFiles.length === 0)
        { // w momencie gdy niczego nie zaznaczono
            const para = document.createElement('p');
            para.textContent = 'Nie wybrałeś żadnego elementu';
            preview.appendChild(para); //wyswietlenie błedu
        } else
        {
            for (const file of curFiles)
            {
                const para = document.createElement('p');
                if (validFileType(file))
                {//jesli format jest odpowiedni
                    const image = document.createElement('img'); //stworzenie znacznika img
                    image.src = URL.createObjectURL(file); //pobranie zrodla zdjecia
                    preview.appendChild(image);
                } else
                {
                    para.textContent = `Plik ${file.name}: nie jest odpowiedniego typu!`;
                    para.style.color = 'rgb(255, 0, 0)';
                    preview.appendChild(para);
                }

                list.appendChild(listItem);
            }
        }
    }
    const fileTypes = [
        "image/apng",
        "image/bmp",
        "image/gif",
        "image/jpeg",
        "image/pjpeg",
        "image/png",
        "image/svg+xml",
        "image/tiff",
        "image/webp",
        "image/x-icon"
    ];

    function validFileType(file)
    {
        return fileTypes.includes(file.type);
    }

</script>
}