<form method="post" enctype="multipart/form-data">
    <div>
        <label for="image_uploads">Choose images to upload (PNG, JPG)</label>
        <input type="file" id="image_uploads" name="image_uploads" accept=".jpg, .jpeg, .png" multiple>
    </div>
    <div class="preview">
        <p>No files currently selected for upload</p>
    </div>
    <div>
        <button>Submit</button>
    </div>
</form>
@section scripts{
    <script type="text/javascript">

        const input = document.querySelector('input');
        const preview = document.querySelector('.preview');

        //input.style.opacity = 0;

        input.addEventListener('change', updateImageDisplay); // oczekiwanie na zmiane i wtedy wywołanie
function updateImageDisplay() {
  while(preview.firstChild) {
    preview.removeChild(preview.firstChild); //oczyszczenie z poprzedniego widoku
  }

  const curFiles = input.files;
  if(curFiles.length === 0) { // w momencie gdy niczego nie zaznaczono
    const para = document.createElement('p');
    para.textContent = 'No files currently selected for upload';
    preview.appendChild(para); //wyswietlenie błedu
  } else {
    const list = document.createElement('ol');
    preview.appendChild(list); //stworzenie listy

    for (const file of curFiles) {
      const listItem = document.createElement('li');//stworzenie wiersza
      const para = document.createElement('p');
      if(validFileType(file)) {//jesli format jest odpowiedni
        para.textContent = `File name ${file.name}, file size ${returnFileSize(file.size)}.`; //informacja o pliku
        const image = document.createElement('img'); //stworzenie znacznika img
        image.src = URL.createObjectURL(file); //pobranie zrodla zdjecia

          
          console.log((image.src).toString());
        listItem.appendChild(image);
        listItem.appendChild(para);
      } else {
        para.textContent = `File name ${file.name}: Not a valid file type. Update your selection.`;
        listItem.appendChild(para);
      }

      list.appendChild(listItem);
    }
  }
}
const fileTypes = [
  "image/apng",
  "image/bmp",
  "image/gif",
  "image/jpeg",
  "image/pjpeg",
  "image/png",
  "image/svg+xml",
  "image/tiff",
  "image/webp",
  "image/x-icon"
];

function validFileType(file) {
  return fileTypes.includes(file.type);
}

function returnFileSize(number) {
  if(number < 1024) {
    return number + 'bytes';
  } else if(number >= 1024 && number < 1048576) {
    return (number/1024).toFixed(1) + 'KB';
  } else if(number >= 1048576) {
    return (number/1048576).toFixed(1) + 'MB';
  }
}

    </script>
}